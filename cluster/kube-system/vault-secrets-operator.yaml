---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: vault-secrets-operator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: vault-secrets-operator
    helm.sh/chart: vault-secrets-operator-1.4.6
  name: vault-secrets-operator
  namespace: kube-system

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: vault-secrets-operator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: vault-secrets-operator
    helm.sh/chart: vault-secrets-operator-1.4.6
  name: vaultsecrets.ricoberger.de
  namespace: kube-system
spec:
  group: ricoberger.de
  names:
    kind: VaultSecret
    listKind: VaultSecretList
    plural: vaultsecrets
    singular: vaultsecret
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            isBinary:
              description: isBinary is a flag indicates if data stored in vault is
                binary data. Since vault does not store binary data natively, the
                binary data is stored as base64 encoded. However, same data get encoded
                again when operator stored them as secret in k8s which caused the
                data to get double encoded. This flag will skip the base64 encode
                which is needed for string data to avoid the double encode problem.
              type: boolean
            keys:
              description: Keys is an array of Keys, which should be included in the
                Kubernetes secret. If the Keys field is ommitted all keys from the
                Vault secret will be included in the Kubernetes secret.
              items:
                type: string
              type: array
            path:
              description: Path is the path of the corresponding secret in Vault.
              type: string
            secretEngine:
              description: SecretEngine specifies the type of the Vault secret engine
                in which the secret is stored. Currently the 'KV Secrets Engine -
                Version 1' and 'KV Secrets Engine - Version 2' are supported. The
                value must be 'kv'. If the value is omitted or an other values is
                used the Vault Secrets Operator will try to use the KV secret engine.
              type: string
            type:
              description: Type is the type of the Kubernetes secret, which will be
                created by the Vault Secrets Operator.
              type: string
            version:
              description: Version sets the version of the secret which should be
                used. The version is only used if the KVv2 secret engine is used.
                If the version is omitted the Operator uses the latest version of
                the secret. If the version omitted and the VAULT_RECONCILIATION_TIME
                environment variable is set, the Kubernetes secret will be updated
                if the Vault secret changes.
              format: int64
              type: integer
          required:
          - path
          - type
          type: object
        status:
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: vault-secrets-operator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: vault-secrets-operator
    helm.sh/chart: vault-secrets-operator-1.4.6
  name: vault-secrets-operator
  namespace: kube-system
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - services/finalizers
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resourceNames:
  - vault-secrets-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
- apiGroups:
  - ricoberger.de
  resources:
  - '*'
  verbs:
  - '*'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: vault-secrets-operator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: vault-secrets-operator
    helm.sh/chart: vault-secrets-operator-1.4.6
  name: vault-secrets-operator
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vault-secrets-operator
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: vault-secrets-operator
  namespace: kube-system

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: vault-secrets-operator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: vault-secrets-operator
    helm.sh/chart: vault-secrets-operator-1.4.6
  name: vault-secrets-operator
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: http
  - name: metrics
    port: 8383
    protocol: TCP
    targetPort: metrics
  - name: opmetrics
    port: 8686
    protocol: TCP
    targetPort: opmetrics
  selector:
    app.kubernetes.io/instance: vault-secrets-operator
    app.kubernetes.io/name: vault-secrets-operator
  type: ClusterIP

---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test-success
  labels:
    app.kubernetes.io/instance: vault-secrets-operator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: vault-secrets-operator
    helm.sh/chart: vault-secrets-operator-1.4.6
  name: vault-secrets-operator-test-connection
  namespace: kube-system
spec:
  containers:
  - args:
    - vault-secrets-operator:8686
    command:
    - wget
    image: busybox
    name: wget
  restartPolicy: Never

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: vault-secrets-operator
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: vault-secrets-operator
    helm.sh/chart: vault-secrets-operator-1.4.6
  name: vault-secrets-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: vault-secrets-operator
      app.kubernetes.io/name: vault-secrets-operator
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: vault-secrets-operator
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: vault-secrets-operator
        helm.sh/chart: vault-secrets-operator-1.4.6
    spec:
      containers:
      - args: []
        env:
        - name: WATCH_NAMESPACE
          value: ""
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OPERATOR_NAME
          value: vault-secrets-operator
        - name: VAULT_ADDRESS
          value: http://vault:8200
        - name: VAULT_AUTH_METHOD
          value: kubernetes
        - name: VAULT_TOKEN_PATH
          value: ""
        - name: VAULT_KUBERNETES_PATH
          value: auth/kubernetes
        - name: VAULT_KUBERNETES_ROLE
          value: vault-secrets-operator
        - name: VAULT_RECONCILIATION_TIME
          value: "300"
        image: ricoberger/vault-secrets-operator:1.4.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /livenessProbe
            port: http
        name: vault-secrets-operator
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8383
          name: metrics
          protocol: TCP
        - containerPort: 8686
          name: opmetrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readinessProbe
            port: http
        resources: {}
      serviceAccountName: vault-secrets-operator

